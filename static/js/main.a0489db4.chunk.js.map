{"version":3,"sources":["Components/DigitalClock.jsx","Components/Navbar.jsx","routes/CreateRoom.js","routes/Room.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","state","date","Date","this","timer","setInterval","setState","clearInterval","Typography","variant","align","toLocaleTimeString","Component","Navbar","AppBar","style","height","weidth","position","Toolbar","width","borderRadius","marginTop","src","alt","paddingLeft","DigitalClock","CreateRoom","React","useState","code","setCode","Container","Grid","container","justify","alignItems","spacing","minHeight","item","sm","md","component","gutterBottom","color","Button","endIcon","onClick","id","uuid","history","push","create","fullWidth","TextField","placeholder","size","value","onChange","e","target","xs","boxShadow","maxHeight","maxWidth","margin","styled","div","StyledVideo","video","Video","ref","useRef","useEffect","peer","on","stream","current","srcObject","playsInline","autoPlay","videoConstraints","window","innerHeight","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","io","connect","navigator","mediaDevices","getUserMedia","audio","then","emit","users","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","peerID","payload","incomingSignal","addPeer","find","p","muted","map","index","key","App","path","exact","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0489db4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Clock extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {date: new Date()};\r\n    }\r\ncomponentDidMount(){\r\n        this.timer = setInterval(\r\n            () => this.setState({date: new Date()}),\r\n            1000\r\n        );\r\n    }\r\ncomponentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\nrender(){\r\n        return( \r\n            <Typography variant=\"h6\" align=\"right\">\r\n                {this.state.date.toLocaleTimeString()}\r\n            </Typography>\r\n        )\r\n    }\r\n}\r\nexport default Clock","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DigitalClock from './DigitalClock'\r\n\r\nexport default function Navbar() {\r\n\r\n  return (\r\n    <div >\r\n       <AppBar style={{height:'50px', weidth:'50px'}} position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" >\r\n              <img style={{height:'50px', width:'50px',borderRadius:\"0.5rem\",marginTop:\".8rem\"}} src=\"https://s3.amazonaws.com/ionic-marketplace/video-and-text-chat-app-backend/icon.png\" alt=\"My logo\" />\r\n            </Typography>\r\n            <div style={{paddingLeft:\"1.2rem\"}}>\r\n              <DigitalClock />\r\n            </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\nimport {Grid,Container,TextField,Typography,Paper,Button} from '@material-ui/core';\r\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\r\nimport BhaluBar from '../Components/Navbar';\r\n\r\nconst CreateRoom = (props) => {\r\n    function create() {\r\n        const id = uuid();\r\n        props.history.push(`/room/${id}`);\r\n    }\r\n    const [code,setCode]=React.useState('')\r\n    function handleChange(e){\r\n        setCode(e.target.value);\r\n    }\r\n    function handleClick(){\r\n        props.history.push(`/room/${code}`);\r\n    }\r\n    function handleRoom(){\r\n        create();\r\n    }\r\n    return (\r\n        <>\r\n            <BhaluBar/>\r\n            <Container>\r\n                <Grid container justify=\"center\" alignItems=\"center\" spacing={6} style={{ minHeight: '100vh' }}>\r\n                {/* Left half */}\r\n                <Grid item sm={12} md={5}>\r\n                    <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Grid item sm={12}>\r\n                            <Typography variant=\"h4\" component=\"h2\" gutterBottom>\r\n                                Premium video meetings.<br/>Now free for everyone.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item sm={12}>\r\n                           <Typography variant=\"subtitle1\" style={{color:\"grey\"}}>\r\n                                We re-engineered the service we built for secure business meetings, Google Meet, to make it free and available for all.\r\n                                <br/><br/>\r\n                            </Typography> \r\n                        </Grid>\r\n                        <Grid item sm={4}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                endIcon={<VideoCallIcon/>}\r\n                                onClick={handleRoom}\r\n                                fullWidth\r\n                            >\r\n                                Meeting\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                            <TextField id=\"outlined-basic\" placeholder=\"Enter a code\" variant=\"outlined\" size=\"small\" value={code} onChange={handleChange} fullWidth/>\r\n                        </Grid>\r\n                        <Grid item sm={2}>\r\n                            {\r\n                                code==''?\r\n                                <></>:\r\n                                <Button color=\"primary\" onClick={handleClick}>Join</Button>\r\n                            }\r\n                        </Grid> \r\n                        <Grid item xs={12}>\r\n                            <br/>\r\n                            <hr/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={7}>\r\n                    <Grid item xs={12}>\r\n                    <div style={{boxShadow: \"0 1px 2px 0 rgba(60,64,67,0.302), 0 2px 6px 2px rgba(60,64,67,0.149)\",borderRadius:\".5rem\"}}>\r\n                        <img style={{maxHeight:\"100%\",maxWidth:'98%',borderRadius:'.5rem',margin:'0.4rem'}}  src=\"https://www.gstatic.com/meet/google_meet_marketing_ongoing_meeting_grid_427cbb32d746b1d0133b898b50115e96.jpg\" />\r\n                    </div>              \r\n                    </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n        // <button onClick={create}>Create room</button>\r\n    );\r\n};\r\n\r\nexport default CreateRoom;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]);\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]);\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\r\n            userVideo.current.srcObject = stream;\r\n            socketRef.current.emit(\"join room\", roomID);\r\n            socketRef.current.on(\"all users\", users => {\r\n                const peers = [];\r\n                users.forEach(userID => {\r\n                    const peer = createPeer(userID, socketRef.current.id, stream);\r\n                    peersRef.current.push({\r\n                        peerID: userID,\r\n                        peer,\r\n                    })\r\n                    peers.push(peer);\r\n                })\r\n                setPeers(peers);\r\n            })\r\n\r\n            socketRef.current.on(\"user joined\", payload => {\r\n                const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                peersRef.current.push({\r\n                    peerID: payload.callerID,\r\n                    peer,\r\n                })\r\n\r\n                setPeers(users => [...users, peer]);\r\n            });\r\n\r\n            socketRef.current.on(\"receiving returned signal\", payload => {\r\n                const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                item.peer.signal(payload.signal);\r\n            });\r\n        })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) {\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport CreateRoom from \"./routes/CreateRoom\";\r\nimport Room from \"./routes/Room\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/Caller\" exact component={CreateRoom} />\r\n        <Route path=\"/room/:roomID\" component={Room} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}